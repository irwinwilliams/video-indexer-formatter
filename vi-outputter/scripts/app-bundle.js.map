{"version":3,"sources":["src/app.js","src/environment.js","src/main.js","src/resources/index.js"],"names":["App","message","vi_output_files","vi_output","parseFiles","console","log","length","file","reader","FileReader","onload","outputVIContent","readAsText","replaceAll","str","find","replace","RegExp","cleanTimeStamp","point","indexOf","before","substring","after","cleaned","hms","a","split","seconds","jublerFormat","Math","round","event","currentTarget","transcriptBlocks","JSON","parse","result","breakdowns","insights","block","blockResult","lines","line","text","end","adjustedTimeRange","start","push","debug","testing","configure","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","then","setRoot","config"],"mappings":"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","file":"app-bundle.js","sourcesContent":["export class App {\r\n    constructor() {\r\n        this.message = \"Hello, let's read some videoindexer output!\";\r\n        this.vi_output_files = {};\r\n        this.vi_output = [];\r\n    }\r\n\r\n    parseFiles() {\r\n        console.log(\"INFO: parsing \" + this.vi_output_files.length + \" files\");\r\n        for (const file of this.vi_output_files) {\r\n            let reader = new FileReader();\r\n            reader.App = this;\r\n            reader.onload = this.outputVIContent;\r\n            reader.readAsText(file);\r\n        }\r\n    }\r\n\r\n    replaceAll(str, find, replace) {\r\n        return str.replace(new RegExp(find, 'g'), replace);\r\n    }\r\n\r\n    cleanTimeStamp(str) {\r\n        var point = str.indexOf(\".\");\r\n        var before = str.substring(0, point);\r\n        var after = str.substring(point);\r\n        after = this.replaceAll(after, '0', '');\r\n        var cleaned = before + after;\r\n        var hms = cleaned; // your input string\r\n        var a = hms.split(':'); // split it at the colons\r\n\r\n        // minutes are worth 60 seconds. Hours are worth 60 minutes.\r\n        var seconds = (+a[0]) * 60 * 60 + (+a[1]) * 60 + (+a[2]);\r\n        var jublerFormat = Math.round(seconds * 10);\r\n        return jublerFormat;\r\n    }\r\n\r\n    outputVIContent(event) {\r\n        let reader = event.currentTarget;\r\n        let transcriptBlocks = JSON.parse(reader.result).breakdowns[0].insights.transcriptBlocks;\r\n        console.log(transcriptBlocks);\r\n        let result = '';\r\n        for (const block of transcriptBlocks) {\r\n            let blockResult = '';\r\n            for (const line of block.lines) {\r\n                blockResult += line.text + ' ';\r\n                result += line.text + ' ';\r\n                var end = line.adjustedTimeRange.end;\r\n                var start = line.adjustedTimeRange.start;\r\n                end = reader.App.cleanTimeStamp(end);\r\n                start = reader.App.cleanTimeStamp(start);\r\n                this.App.vi_output.push({\r\n                    \"start\": start,\r\n                    \"end\": end,\r\n                    \"line\": line.text\r\n                });\r\n            }\r\n            //this.App.vi_output.push(blockResult);\r\n        }\r\n    }\r\n}","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n"],"sourceRoot":".."}